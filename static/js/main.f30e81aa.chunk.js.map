{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOptions","this","props","options","onLeaveFeedback","className","map","option","type","onClick","name","id","Component","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","countTotalFeedback","state","array","Array","push","reduce","a","b","countPositiveFeedbackPercentage","parseFloat","toFixed","setState","title","App","ReactDOM","render","document","querySelector"],"mappings":"mQAIqBA,G,6KAQR,IAAD,EACiCC,KAAKC,MAAlCC,EADJ,EACIA,QAASC,EADb,EACaA,gBACjB,OACI,qBAAKC,UAAU,eAAf,SACKF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBAAQC,KAAK,SAAyBC,QAAS,kBAAML,EAAgBG,EAAOC,OAA5E,SAAoFD,EAAOG,MAAhEH,EAAOI,a,GAbTC,cAAxBZ,EACVa,aAAe,CAClBV,QAAQ,I,UCDKW,E,uKAkBR,IAAD,EACoDb,KAAKC,MAAtDa,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAAKC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,mBAClC,OACI,8BACI,qBAAId,UAAU,aAAd,UACI,+BAAI,wCAAJ,KAAwBU,KACxB,+BAAI,2CAAJ,KAA2BC,KAC3B,+BAAI,uCAAJ,KAAuBC,KACvB,+BAAI,yCAAJ,KAAyBC,KACzB,+BAAI,qDAAJ,KAAqCC,EAArC,gB,GA3BoBP,aCFzB,SAASQ,EAAT,GAAiC,IAAVC,EAAS,EAATA,QAClC,OACI,6BAAKA,IDAQP,EAEVD,aAAe,CAClBE,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAM,EACNC,mBAAmB,GCH3BC,EAAaP,aAAe,CACxBQ,QAAS,qBCFb,IAAMlB,EAAU,CACZ,CAACQ,GAAG,EAAGD,KAAK,OAAQF,KAAK,QACzB,CAACG,GAAG,EAAGD,KAAK,UAAWF,KAAK,WAC5B,CAACG,GAAG,EAAGD,KAAK,MAAOF,KAAK,QAGPc,E,kDAKjB,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IAUVqB,mBAAqB,WAAO,IAAD,EACM,EAAKC,MAA3BT,EADgB,EAChBA,KAAMC,EADU,EACVA,QAASC,EADC,EACDA,IAChBQ,EAAQ,IAAIC,MAMlB,OAJAD,EAAME,KAAKZ,GACXU,EAAME,KAAKX,GACXS,EAAME,KAAKV,GAEJQ,EAAMG,QAAO,SAACC,EAAGC,GAAQ,OAAOD,EAAIC,MAnB7B,EAsBlBC,gCAAkC,WAE9B,IAAMb,EAAQ,EAAKK,qBACXR,EAAS,EAAKS,MAAdT,KAKR,OAAOiB,YAHiB,IAAMd,EACOH,GAERkB,QAAQ,KA9BvB,EAiClB7B,gBAAkB,SAACI,GAEf,EAAK0B,SAAL,eAAgB1B,EAAO,EAAKgB,MAAMhB,GAAQ,KAhC1C,EAAKgB,MAAQ,CACTT,KAAM,EACNC,QAAS,EACTC,IAAK,GANK,E,qDAuCT,IACGkB,EAAUlC,KAAKC,MAAfiC,MADJ,EAE0BlC,KAAKuB,MAA3BT,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,IACjBM,EAAqBtB,KAAKsB,qBAC1BQ,EAAkC9B,KAAK8B,kCAE7C,OACI,qCACI,6BAAKI,IACL,cAAC,EAAD,CAAiBhC,QAASA,EAASC,gBAAiBH,KAAKG,kBACzD,uBAEA,4CACY,IAATW,GAA0B,IAAZC,GAA0B,IAARC,EAC/B,cAAC,EAAD,CAAYF,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOK,EAAoBJ,mBAAoBY,IACnG,cAACX,EAAD,CAAce,MAAM,6B,GA3DHvB,aCZtB,SAASwB,IACtB,OACE,cAAC,EAAD,CAASD,MAAM,0BDUEb,EACVT,aAAe,CAClBsB,MAAM,gBEZdE,IAASC,OAAO,cAACF,EAAD,IAAaG,SAASC,cAAc,Y","file":"static/js/main.f30e81aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css'\r\n\r\nexport default class FeedbackOptions extends Component {\r\n    static defaultProps = {\r\n        options:[]\r\n    }\r\n    static propTypes = {\r\n        options: PropTypes.array.isRequired\r\n    }\r\n\r\n    render(){\r\n        const { options, onLeaveFeedback } = this.props;\r\n        return(\r\n            <div className=\"group-button\">\r\n                {options.map(option => (\r\n                    <button type=\"button\" key={option.id} onClick={() => onLeaveFeedback(option.type)}>{option.name}</button>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Statistics.css';\r\n\r\nexport default class Statistics extends Component {\r\n\r\n    static defaultProps = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        total:0,\r\n        positivePercentage:0\r\n    }\r\n\r\n    static propTypes = {\r\n        good: PropTypes.number.isRequired,\r\n        neutral:  PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n        total: PropTypes.number.isRequired,\r\n        positivePercentage: PropTypes.number.isRequired\r\n    }\r\n\r\n    render(){\r\n        const {good, neutral, bad, total, positivePercentage} = this.props;\r\n        return(\r\n            <div>\r\n                <ul className=\"statistics\">\r\n                    <li><span>Good</span>: {good}</li>\r\n                    <li><span>Neutral</span>: {neutral}</li>\r\n                    <li><span>bad</span>: {bad}</li>\r\n                    <li><span>Total</span>: {total}</li>\r\n                    <li><span>Positive feedback</span>: {positivePercentage}%</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Notification({message}){\r\n    return(\r\n        <h3>{message}</h3>\r\n    );\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: \"No feedback given\"\r\n}\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string\r\n}\r\n","import React, { Component } from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\nimport FeedbackOptions from './../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './../Statistics/Statistics';\r\nimport Notification from './../Notification/Notification'\r\n\r\n\r\nconst options = [\r\n    {id:1, name:\"Good\", type:'good'},\r\n    {id:2, name:\"Neutral\", type:'neutral'},\r\n    {id:3, name:\"Bad\", type:'bad'}\r\n];\r\n\r\nexport default class Section extends Component {\r\n    static defaultProps = {\r\n        title:'Section Name'\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            good: 0,\r\n            neutral: 0,\r\n            bad: 0,\r\n        }\r\n\r\n    }\r\n\r\n    countTotalFeedback = () => {\r\n        const {good, neutral, bad} = this.state;\r\n        const array = new Array;\r\n\r\n        array.push(good);\r\n        array.push(neutral);\r\n        array.push(bad);\r\n\r\n        return array.reduce((a, b) => { return a + b});\r\n    }\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n\r\n        const total = this.countTotalFeedback();\r\n        const { good } = this.state;\r\n       \r\n        const totslPercentage = 100 / total;\r\n        const percentage = totslPercentage * good;\r\n\r\n        return parseFloat(percentage.toFixed(0));\r\n    }\r\n\r\n    onLeaveFeedback = (type) => {\r\n\r\n        this.setState({[type]: this.state[type] + 1})\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { title } = this.props;\r\n        const { good, neutral, bad} = this.state;\r\n        const countTotalFeedback = this.countTotalFeedback();\r\n        const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n\r\n        return(\r\n            <> \r\n                <h2>{title}</h2>\r\n                <FeedbackOptions options={options} onLeaveFeedback={this.onLeaveFeedback} />\r\n                <br/>\r\n\r\n                <h2>Statistics</h2>\r\n                { (good !== 0 || neutral !== 0 ||  bad !== 0) ? \r\n                    <Statistics good={good} neutral={neutral} bad={bad} total={countTotalFeedback} positivePercentage={countPositiveFeedbackPercentage} /> :\r\n                    <Notification title=\"No feedback given\" />\r\n                     \r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n}","import Section from './components/Section/Section';\n\nexport default function App() {\n  return (\n    <Section title=\"Please leave feedback\" />\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App></App>, document.querySelector('#root'));\n\n\n\n"],"sourceRoot":""}